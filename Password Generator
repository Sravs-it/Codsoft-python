Welcome to the Username-based Password Generator!
Enter your username: Charan
Choose password complexity (easy/hard): hard
Enter the desired password length: 20
Generated password: @Charan82#^*[]&9%#(12







import random
import string

# Function to automatically generate password based on username
def generate_password(username, complexity, length):
    if len(username) < 3:
        print("Username should be at least 3 characters long!")
        return None

    # Add a wider variety of special characters
    special_chars = "!@#$%^&*()_+[]{}|;:,.<>?/~`"

    # Ensure the password has enough length to include special characters
    if length <= len(username) + 4:
        print("Password length should be at least 4 characters more than the username!")
        return None

    if complexity == "easy":
        # Easy password: Add random digits around the username
        extra_chars = ''.join(random.choices(string.digits, k=length - len(username) - 2))
        password = f"@{username}{extra_chars}#"
    
    elif complexity == "hard":
        # Hard password: Add special characters and digits around the username
        extra_chars = ''.join(random.choices(special_chars + string.digits, k=length - len(username) - 2))
        password = f"@{username}{extra_chars}#"
    
    else:
        print("Invalid complexity option!")
        return None

    # Return the password up to the desired length
    return password[:length]

# Main program
def main():
    print("Welcome to the Username-based Password Generator!")

    # Step 1: Get username
    username = input("Enter your username: ").strip()

    # Step 2: Validate username
    if len(username) < 3:
        print("Username should be at least 3 characters long!")
        return

    # Step 3: Get complexity level
    complexity = input("Choose password complexity (easy/hard): ").strip().lower()

    # Step 4: Get password length
    length = int(input("Enter the desired password length: "))

    # Step 5: Generate password based on complexity
    password = generate_password(username, complexity, length)

    if password:
        # Step 6: Display the password
        print(f"Generated password: {password}")

# Run the main program
if __name__ == "__main__":
    main()
